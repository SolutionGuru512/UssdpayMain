/*
 * Transactions APIs
 * Get Transactions Details
 *
 * OpenAPI spec version: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bank.ussd.apiclient.transactions.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

/**
 * StatementForTransactionResponseBodyInnerImages
 */

public class StatementForTransactionResponseBodyInnerImages {
  @JsonProperty("imageDocId")
  private String imageDocId = null;

  @JsonProperty("imageId")
  private String imageId = null;

  @JsonProperty("imageType")
  private String imageType = null;

  public StatementForTransactionResponseBodyInnerImages imageDocId(String imageDocId) {
    this.imageDocId = imageDocId;
    return this;
  }

   /**
   * 
   * @return imageDocId
  **/
  @ApiModelProperty(value = "")
  public String getImageDocId() {
    return imageDocId;
  }

  public void setImageDocId(String imageDocId) {
    this.imageDocId = imageDocId;
  }

  public StatementForTransactionResponseBodyInnerImages imageId(String imageId) {
    this.imageId = imageId;
    return this;
  }

   /**
   * The identifier of the image used for advertisement
   * @return imageId
  **/
  @ApiModelProperty(value = "The identifier of the image used for advertisement")
  public String getImageId() {
    return imageId;
  }

  public void setImageId(String imageId) {
    this.imageId = imageId;
  }

  public StatementForTransactionResponseBodyInnerImages imageType(String imageType) {
    this.imageType = imageType;
    return this;
  }

   /**
   * Identifies the type of image to be stored and its location. Typical usage would be to segregate images by criteria such as PASSPORTS, PHOTOGRAPHS, SIGNATURES and DOCUMENTS. Image types can be used to assist selection of records in Enquiries as well as the physical distribution of files.Must be a valid record on IM.IMAGE.TYPE.
   * @return imageType
  **/
  @ApiModelProperty(value = "Identifies the type of image to be stored and its location. Typical usage would be to segregate images by criteria such as PASSPORTS, PHOTOGRAPHS, SIGNATURES and DOCUMENTS. Image types can be used to assist selection of records in Enquiries as well as the physical distribution of files.Must be a valid record on IM.IMAGE.TYPE.")
  public String getImageType() {
    return imageType;
  }

  public void setImageType(String imageType) {
    this.imageType = imageType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatementForTransactionResponseBodyInnerImages statementForTransactionResponseBodyInnerImages = (StatementForTransactionResponseBodyInnerImages) o;
    return Objects.equals(this.imageDocId, statementForTransactionResponseBodyInnerImages.imageDocId) &&
        Objects.equals(this.imageId, statementForTransactionResponseBodyInnerImages.imageId) &&
        Objects.equals(this.imageType, statementForTransactionResponseBodyInnerImages.imageType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(imageDocId, imageId, imageType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatementForTransactionResponseBodyInnerImages {\n");
    
    sb.append("    imageDocId: ").append(toIndentedString(imageDocId)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    imageType: ").append(toIndentedString(imageType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

