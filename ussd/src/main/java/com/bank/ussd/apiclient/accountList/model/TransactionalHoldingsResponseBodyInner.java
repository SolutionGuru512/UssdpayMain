/*
 * GetHoldingsAPI
 * Get Holdings API
 *
 * OpenAPI spec version: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bank.ussd.apiclient.accountList.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * TransactionalHoldingsResponseBodyInner
 */

public class TransactionalHoldingsResponseBodyInner {
  @JsonProperty("accountId")
  private String accountId = null;

  @JsonProperty("shortTitle")
  private String shortTitle = null;

  @JsonProperty("categoryId")
  private String categoryId = null;

  @JsonProperty("workingBalance")
  private String workingBalance = null;

  @JsonProperty("currencyId")
  private String currencyId = null;

  @JsonProperty("productLineName")
  private String productLineName = null;

  @JsonProperty("openingDate")
  private String openingDate = null;

  @JsonProperty("companyCode")
  private String companyCode = null;

  @JsonProperty("companyName")
  private String companyName = null;

  @JsonProperty("onlineActualBalance")
  private String onlineActualBalance = null;

  @JsonProperty("availableBalance")
  private String availableBalance = null;

  public TransactionalHoldingsResponseBodyInner accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN &amp; BBAN
   * @return accountId
  **/
  @ApiModelProperty(value = "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public TransactionalHoldingsResponseBodyInner shortTitle(String shortTitle) {
    this.shortTitle = shortTitle;
    return this;
  }

   /**
   * Short title given to the name of the arrangement
   * @return shortTitle
  **/
  @ApiModelProperty(value = "Short title given to the name of the arrangement")
  public String getShortTitle() {
    return shortTitle;
  }

  public void setShortTitle(String shortTitle) {
    this.shortTitle = shortTitle;
  }

  public TransactionalHoldingsResponseBodyInner categoryId(String categoryId) {
    this.categoryId = categoryId;
    return this;
  }

   /**
   * Unique identifier associated with the product name of the account or contract. For example: For customer/counterparty accounts, the identifier would be in the range 1000 to 9999. For ledger accounts, in the range 10000 to 19999.
   * @return categoryId
  **/
  @ApiModelProperty(value = "Unique identifier associated with the product name of the account or contract. For example: For customer/counterparty accounts, the identifier would be in the range 1000 to 9999. For ledger accounts, in the range 10000 to 19999.")
  public String getCategoryId() {
    return categoryId;
  }

  public void setCategoryId(String categoryId) {
    this.categoryId = categoryId;
  }

  public TransactionalHoldingsResponseBodyInner workingBalance(String workingBalance) {
    this.workingBalance = workingBalance;
    return this;
  }

   /**
   * Real-time balance including all authorised transactions posted against the account and, unless it is a nostro or internal account, unauthorised debit entries.
   * @return workingBalance
  **/
  @ApiModelProperty(value = "Real-time balance including all authorised transactions posted against the account and, unless it is a nostro or internal account, unauthorised debit entries.")
  public String getWorkingBalance() {
    return workingBalance;
  }

  public void setWorkingBalance(String workingBalance) {
    this.workingBalance = workingBalance;
  }

  public TransactionalHoldingsResponseBodyInner currencyId(String currencyId) {
    this.currencyId = currencyId;
    return this;
  }

   /**
   * Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.
   * @return currencyId
  **/
  @ApiModelProperty(value = "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.")
  public String getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }

  public TransactionalHoldingsResponseBodyInner productLineName(String productLineName) {
    this.productLineName = productLineName;
    return this;
  }

   /**
   * Description of the product line, e.g. Client Consent for product line CONSENT.
   * @return productLineName
  **/
  @ApiModelProperty(value = "Description of the product line, e.g. Client Consent for product line CONSENT.")
  public String getProductLineName() {
    return productLineName;
  }

  public void setProductLineName(String productLineName) {
    this.productLineName = productLineName;
  }

  public TransactionalHoldingsResponseBodyInner openingDate(String openingDate) {
    this.openingDate = openingDate;
    return this;
  }

   /**
   * The date the account is opened.
   * @return openingDate
  **/
  @ApiModelProperty(value = "The date the account is opened.")
  public String getOpeningDate() {
    return openingDate;
  }

  public void setOpeningDate(String openingDate) {
    this.openingDate = openingDate;
  }

  public TransactionalHoldingsResponseBodyInner companyCode(String companyCode) {
    this.companyCode = companyCode;
    return this;
  }

   /**
   * Specifies the company code which will be the master company for this institution. E.g. GB0010001, US0010001.
   * @return companyCode
  **/
  @ApiModelProperty(value = "Specifies the company code which will be the master company for this institution. E.g. GB0010001, US0010001.")
  public String getCompanyCode() {
    return companyCode;
  }

  public void setCompanyCode(String companyCode) {
    this.companyCode = companyCode;
  }

  public TransactionalHoldingsResponseBodyInner companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

   /**
   * The company in which payment is processed
   * @return companyName
  **/
  @ApiModelProperty(value = "The company in which payment is processed")
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }

  public TransactionalHoldingsResponseBodyInner onlineActualBalance(String onlineActualBalance) {
    this.onlineActualBalance = onlineActualBalance;
    return this;
  }

   /**
   * Real-time balance including all authorised transactions posted against the account, excluding any entries with a future processing date.
   * @return onlineActualBalance
  **/
  @ApiModelProperty(value = "Real-time balance including all authorised transactions posted against the account, excluding any entries with a future processing date.")
  public String getOnlineActualBalance() {
    return onlineActualBalance;
  }

  public void setOnlineActualBalance(String onlineActualBalance) {
    this.onlineActualBalance = onlineActualBalance;
  }

  public TransactionalHoldingsResponseBodyInner availableBalance(String availableBalance) {
    this.availableBalance = availableBalance;
    return this;
  }

   /**
   * Available balance of the account which is the projected balance which includes the net movements of both debits and credits against the account.
   * @return availableBalance
  **/
  @ApiModelProperty(value = "Available balance of the account which is the projected balance which includes the net movements of both debits and credits against the account.")
  public String getAvailableBalance() {
    return availableBalance;
  }

  public void setAvailableBalance(String availableBalance) {
    this.availableBalance = availableBalance;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionalHoldingsResponseBodyInner transactionalHoldingsResponseBodyInner = (TransactionalHoldingsResponseBodyInner) o;
    return Objects.equals(this.accountId, transactionalHoldingsResponseBodyInner.accountId) &&
        Objects.equals(this.shortTitle, transactionalHoldingsResponseBodyInner.shortTitle) &&
        Objects.equals(this.categoryId, transactionalHoldingsResponseBodyInner.categoryId) &&
        Objects.equals(this.workingBalance, transactionalHoldingsResponseBodyInner.workingBalance) &&
        Objects.equals(this.currencyId, transactionalHoldingsResponseBodyInner.currencyId) &&
        Objects.equals(this.productLineName, transactionalHoldingsResponseBodyInner.productLineName) &&
        Objects.equals(this.openingDate, transactionalHoldingsResponseBodyInner.openingDate) &&
        Objects.equals(this.companyCode, transactionalHoldingsResponseBodyInner.companyCode) &&
        Objects.equals(this.companyName, transactionalHoldingsResponseBodyInner.companyName) &&
        Objects.equals(this.onlineActualBalance, transactionalHoldingsResponseBodyInner.onlineActualBalance) &&
        Objects.equals(this.availableBalance, transactionalHoldingsResponseBodyInner.availableBalance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, shortTitle, categoryId, workingBalance, currencyId, productLineName, openingDate, companyCode, companyName, onlineActualBalance, availableBalance);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionalHoldingsResponseBodyInner {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    shortTitle: ").append(toIndentedString(shortTitle)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    workingBalance: ").append(toIndentedString(workingBalance)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    productLineName: ").append(toIndentedString(productLineName)).append("\n");
    sb.append("    openingDate: ").append(toIndentedString(openingDate)).append("\n");
    sb.append("    companyCode: ").append(toIndentedString(companyCode)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    onlineActualBalance: ").append(toIndentedString(onlineActualBalance)).append("\n");
    sb.append("    availableBalance: ").append(toIndentedString(availableBalance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

